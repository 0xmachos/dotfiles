# ~/.shh/config
# ssh_config(5)

# https://stribika.github.io/2015/01/04/secure-secure-shell.html 

Include ~/.ssh/.extra_ssh

Host github.com
     User 0xmachos
     IdentityAgent ~/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh
     IdentityFile ~/.ssh/id_ecdsa-sha2-nistp256_github.pub

Host *

    IdentityAgent ~/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh
    IdentitiesOnly yes
    VisualHostKey yes
    PubkeyAuthentication yes
    HashKnownHosts yes
    # ssh-keygen -R hostname

    UseRoaming no
    # CVE-0216-0777

    UseKeychain yes
    # Tell the system to search for key passphrases in the user's keychain 
    # When passphrase is provided and is correct store it in the keychain
    # https://developer.apple.com/library/content/technotes/tn2449/_index.html

    ForwardAgent no
    # Do not allow the connection to the authentication agent to be forwarded to the remote machine
    # http://www.unixwiz.net/techtips/ssh-agent-forwarding.html#fwd

    # Cryptography

    Ciphers chacha20-poly1305@openssh.com
    # Only use chacha20-poly1305
    # Chacha20-poly1305 is preferred over AES-GCM because the SSH protocol does 
    #   not encrypt message sizes when GCM (or EtM) is in use. 
    #   This allows some traffic analysis even without decrypting the data.
    #   See: http://blog.djm.net.au/2013/11/chacha20-and-poly1305-in-openssh.html

    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com
    # Only use encrypt then mac (etm) MACs
    # Allow only HMAC-SHA2-512/256 or UMAC-128
    #   https://crypto.stackexchange.com/a/56432

    KexAlgorithms curve25519-sha256
    # Only use DH over curve25519
    
    HostKeyAlgorithms ecdsa-sha2-nistp256,ssh-ed25519
    # Allow only ed25519 or ECDSA keys for client authentication
    # ECDSA for Secretive/ Secure Enclave keys
    # ed25519 for everything else

